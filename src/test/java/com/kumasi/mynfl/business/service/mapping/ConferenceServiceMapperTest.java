/*
 * Created on 5 Jun 2016 ( Time 14:55:36 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.mynfl.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.kumasi.mynfl.domain.Conference;
import com.kumasi.mynfl.domain.jpa.ConferenceEntity;
import com.kumasi.mynfl.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class ConferenceServiceMapperTest {

	private ConferenceServiceMapper conferenceServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		conferenceServiceMapper = new ConferenceServiceMapper();
		conferenceServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'ConferenceEntity' to 'Conference'
	 * @param conferenceEntity
	 */
	@Test
	public void testMapConferenceEntityToConference() {
		// Given
		ConferenceEntity conferenceEntity = new ConferenceEntity();
		conferenceEntity.setCode(mockValues.nextString(3));
		conferenceEntity.setName(mockValues.nextString(45));
		
		// When
		Conference conference = conferenceServiceMapper.mapConferenceEntityToConference(conferenceEntity);
		
		// Then
		assertEquals(conferenceEntity.getCode(), conference.getCode());
		assertEquals(conferenceEntity.getName(), conference.getName());
	}
	
	/**
	 * Test : Mapping from 'Conference' to 'ConferenceEntity'
	 */
	@Test
	public void testMapConferenceToConferenceEntity() {
		// Given
		Conference conference = new Conference();
		conference.setCode(mockValues.nextString(3));
		conference.setName(mockValues.nextString(45));

		ConferenceEntity conferenceEntity = new ConferenceEntity();
		
		// When
		conferenceServiceMapper.mapConferenceToConferenceEntity(conference, conferenceEntity);
		
		// Then
		assertEquals(conference.getCode(), conferenceEntity.getCode());
		assertEquals(conference.getName(), conferenceEntity.getName());
	}

}