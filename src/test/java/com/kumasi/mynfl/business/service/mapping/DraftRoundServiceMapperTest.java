/*
 * Created on 5 Jun 2016 ( Time 14:55:36 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.mynfl.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.kumasi.mynfl.domain.DraftRound;
import com.kumasi.mynfl.domain.jpa.DraftRoundEntity;
import com.kumasi.mynfl.domain.jpa.DraftTeamEntity;
import com.kumasi.mynfl.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class DraftRoundServiceMapperTest {

	private DraftRoundServiceMapper draftRoundServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		draftRoundServiceMapper = new DraftRoundServiceMapper();
		draftRoundServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'DraftRoundEntity' to 'DraftRound'
	 * @param draftRoundEntity
	 */
	@Test
	public void testMapDraftRoundEntityToDraftRound() {
		// Given
		DraftRoundEntity draftRoundEntity = new DraftRoundEntity();
		draftRoundEntity.setRoundNbr(mockValues.nextInteger());
		draftRoundEntity.setPlayerName(mockValues.nextString(45));
		draftRoundEntity.setPlayerPosition(mockValues.nextString(45));
		draftRoundEntity.setPlayerAnalysis(mockValues.nextString(16777215));
		draftRoundEntity.setDraftTeam(new DraftTeamEntity());
		draftRoundEntity.getDraftTeam().setId(mockValues.nextInteger());
		
		// When
		DraftRound draftRound = draftRoundServiceMapper.mapDraftRoundEntityToDraftRound(draftRoundEntity);
		
		// Then
		assertEquals(draftRoundEntity.getRoundNbr(), draftRound.getRoundNbr());
		assertEquals(draftRoundEntity.getPlayerName(), draftRound.getPlayerName());
		assertEquals(draftRoundEntity.getPlayerPosition(), draftRound.getPlayerPosition());
		assertEquals(draftRoundEntity.getPlayerAnalysis(), draftRound.getPlayerAnalysis());
		assertEquals(draftRoundEntity.getDraftTeam().getId(), draftRound.getDraftTeamId());
	}
	
	/**
	 * Test : Mapping from 'DraftRound' to 'DraftRoundEntity'
	 */
	@Test
	public void testMapDraftRoundToDraftRoundEntity() {
		// Given
		DraftRound draftRound = new DraftRound();
		draftRound.setRoundNbr(mockValues.nextInteger());
		draftRound.setPlayerName(mockValues.nextString(45));
		draftRound.setPlayerPosition(mockValues.nextString(45));
		draftRound.setPlayerAnalysis(mockValues.nextString(16777215));
		draftRound.setDraftTeamId(mockValues.nextInteger());

		DraftRoundEntity draftRoundEntity = new DraftRoundEntity();
		
		// When
		draftRoundServiceMapper.mapDraftRoundToDraftRoundEntity(draftRound, draftRoundEntity);
		
		// Then
		assertEquals(draftRound.getRoundNbr(), draftRoundEntity.getRoundNbr());
		assertEquals(draftRound.getPlayerName(), draftRoundEntity.getPlayerName());
		assertEquals(draftRound.getPlayerPosition(), draftRoundEntity.getPlayerPosition());
		assertEquals(draftRound.getPlayerAnalysis(), draftRoundEntity.getPlayerAnalysis());
		assertEquals(draftRound.getDraftTeamId(), draftRoundEntity.getDraftTeam().getId());
	}

}