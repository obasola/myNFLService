/*
 * Created on 5 Jun 2016 ( Time 14:55:36 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.mynfl.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.kumasi.mynfl.domain.PlayerPosition;
import com.kumasi.mynfl.domain.jpa.PlayerPositionEntity;
import com.kumasi.mynfl.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class PlayerPositionServiceMapperTest {

	private PlayerPositionServiceMapper playerPositionServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		playerPositionServiceMapper = new PlayerPositionServiceMapper();
		playerPositionServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'PlayerPositionEntity' to 'PlayerPosition'
	 * @param playerPositionEntity
	 */
	@Test
	public void testMapPlayerPositionEntityToPlayerPosition() {
		// Given
		PlayerPositionEntity playerPositionEntity = new PlayerPositionEntity();
		playerPositionEntity.setPositionName(mockValues.nextString(45));
		playerPositionEntity.setDescription(mockValues.nextString(500));
		
		// When
		PlayerPosition playerPosition = playerPositionServiceMapper.mapPlayerPositionEntityToPlayerPosition(playerPositionEntity);
		
		// Then
		assertEquals(playerPositionEntity.getPositionName(), playerPosition.getPositionName());
		assertEquals(playerPositionEntity.getDescription(), playerPosition.getDescription());
	}
	
	/**
	 * Test : Mapping from 'PlayerPosition' to 'PlayerPositionEntity'
	 */
	@Test
	public void testMapPlayerPositionToPlayerPositionEntity() {
		// Given
		PlayerPosition playerPosition = new PlayerPosition();
		playerPosition.setPositionName(mockValues.nextString(45));
		playerPosition.setDescription(mockValues.nextString(500));

		PlayerPositionEntity playerPositionEntity = new PlayerPositionEntity();
		
		// When
		playerPositionServiceMapper.mapPlayerPositionToPlayerPositionEntity(playerPosition, playerPositionEntity);
		
		// Then
		assertEquals(playerPosition.getPositionName(), playerPositionEntity.getPositionName());
		assertEquals(playerPosition.getDescription(), playerPositionEntity.getDescription());
	}

}