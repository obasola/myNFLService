/*
 * Created on 5 Jun 2016 ( Time 14:55:48 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.mynfl.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.kumasi.mynfl.domain.Division;
import com.kumasi.mynfl.business.service.DivisionService;
import com.kumasi.mynfl.web.listitem.DivisionListItem;

/**
 * Spring MVC controller for 'Division' management.
 */
@Controller
public class DivisionRestController {

	@Resource
	private DivisionService divisionService;
	
	@RequestMapping( value="/items/division",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<DivisionListItem> findAllAsListItems() {
		List<Division> list = divisionService.findAll();
		List<DivisionListItem> items = new LinkedList<DivisionListItem>();
		for ( Division division : list ) {
			items.add(new DivisionListItem( division ) );
		}
		return items;
	}
	
	@RequestMapping( value="/division",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Division> findAll() {
		return divisionService.findAll();
	}

	@RequestMapping( value="/division/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Division findOne(@PathVariable("id") Integer id) {
		return divisionService.findById(id);
	}
	
	@RequestMapping( value="/division",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Division create(@RequestBody Division division) {
		return divisionService.create(division);
	}

	@RequestMapping( value="/division/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Division update(@PathVariable("id") Integer id, @RequestBody Division division) {
		return divisionService.update(division);
	}

	@RequestMapping( value="/division/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		divisionService.delete(id);
	}
	
}
