/*
 * Created on 5 Jun 2016 ( Time 14:55:48 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.mynfl.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.kumasi.mynfl.domain.DraftRound;
import com.kumasi.mynfl.business.service.DraftRoundService;
import com.kumasi.mynfl.web.listitem.DraftRoundListItem;

/**
 * Spring MVC controller for 'DraftRound' management.
 */
@Controller
public class DraftRoundRestController {

	@Resource
	private DraftRoundService draftRoundService;
	
	@RequestMapping( value="/items/draftRound",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<DraftRoundListItem> findAllAsListItems() {
		List<DraftRound> list = draftRoundService.findAll();
		List<DraftRoundListItem> items = new LinkedList<DraftRoundListItem>();
		for ( DraftRound draftRound : list ) {
			items.add(new DraftRoundListItem( draftRound ) );
		}
		return items;
	}
	
	@RequestMapping( value="/draftRound",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<DraftRound> findAll() {
		return draftRoundService.findAll();
	}

	@RequestMapping( value="/draftRound/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public DraftRound findOne(@PathVariable("id") Integer id) {
		return draftRoundService.findById(id);
	}
	
	@RequestMapping( value="/draftRound",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public DraftRound create(@RequestBody DraftRound draftRound) {
		return draftRoundService.create(draftRound);
	}

	@RequestMapping( value="/draftRound/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public DraftRound update(@PathVariable("id") Integer id, @RequestBody DraftRound draftRound) {
		return draftRoundService.update(draftRound);
	}

	@RequestMapping( value="/draftRound/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		draftRoundService.delete(id);
	}
	
}
