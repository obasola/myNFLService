/*
 * Created on 5 Jun 2016 ( Time 14:55:49 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.mynfl.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.kumasi.mynfl.domain.Status;
import com.kumasi.mynfl.business.service.StatusService;
import com.kumasi.mynfl.web.listitem.StatusListItem;

/**
 * Spring MVC controller for 'Status' management.
 */
@Controller
public class StatusRestController {

	@Resource
	private StatusService statusService;
	
	@RequestMapping( value="/items/status",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<StatusListItem> findAllAsListItems() {
		List<Status> list = statusService.findAll();
		List<StatusListItem> items = new LinkedList<StatusListItem>();
		for ( Status status : list ) {
			items.add(new StatusListItem( status ) );
		}
		return items;
	}
	
	@RequestMapping( value="/status",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Status> findAll() {
		return statusService.findAll();
	}

	@RequestMapping( value="/status/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Status findOne(@PathVariable("id") Integer id) {
		return statusService.findById(id);
	}
	
	@RequestMapping( value="/status",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Status create(@RequestBody Status status) {
		return statusService.create(status);
	}

	@RequestMapping( value="/status/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Status update(@PathVariable("id") Integer id, @RequestBody Status status) {
		return statusService.update(status);
	}

	@RequestMapping( value="/status/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		statusService.delete(id);
	}
	
}
