/*
 * Created on 5 Jun 2016 ( Time 14:55:25 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.mynfl.persistence.services.fake;

import java.util.List;
import java.util.Map;

import com.kumasi.mynfl.domain.jpa.TeamStatEntity;
import com.kumasi.mynfl.persistence.commons.fake.GenericFakeService;
import com.kumasi.mynfl.persistence.services.TeamStatPersistence;

/**
 * Fake persistence service implementation ( entity "TeamStat" )
 *
 * @author Telosys Tools Generator
 */
public class TeamStatPersistenceFAKE extends GenericFakeService<TeamStatEntity> implements TeamStatPersistence {

	public TeamStatPersistenceFAKE () {
		super(TeamStatEntity.class);
	}
	
	protected TeamStatEntity buildEntity(int index) {
		TeamStatEntity entity = new TeamStatEntity();
		// Init fields with mock values
		entity.setId( nextInteger() ) ;
		entity.setWon( nextInteger() ) ;
		entity.setLost( nextInteger() ) ;
		entity.setTied( nextInteger() ) ;
		entity.setPercent( nextFloat() ) ;
		entity.setPointsForced( nextInteger() ) ;
		entity.setPointsAllowed( nextInteger() ) ;
		entity.setNetPints( nextInteger() ) ;
		entity.setTouchdowns( nextInteger() ) ;
		entity.setHomeRecord( nextString() ) ;
		entity.setRoadRecord( nextString() ) ;
		entity.setDivisionRecord( nextString() ) ;
		entity.setConferenceRecord( nextString() ) ;
		entity.setPlayerStatscol( nextString() ) ;
		entity.setOverallPercent( nextFloat() ) ;
		entity.setStreak( nextString() ) ;
		entity.setLastFive( nextString() ) ;
		return entity ;
	}
	
	
	public boolean delete(TeamStatEntity entity) {
		log("delete ( TeamStatEntity : " + entity + ")" ) ;
		return true;
	}

	public boolean delete( Integer id ) {
		log("delete ( PK )") ;
		return true;
	}

	public void insert(TeamStatEntity entity) {
		log("insert ( TeamStatEntity : " + entity + ")" ) ;
	}

	public TeamStatEntity load( Integer id ) {
		log("load ( PK )") ;
		return buildEntity(1) ; 
	}

	public List<TeamStatEntity> loadAll() {
		log("loadAll()") ;
		return buildList(40) ;
	}

	public List<TeamStatEntity> loadByNamedQuery(String queryName) {
		log("loadByNamedQuery ( '" + queryName + "' )") ;
		return buildList(20) ;
	}

	public List<TeamStatEntity> loadByNamedQuery(String queryName, Map<String, Object> queryParameters) {
		log("loadByNamedQuery ( '" + queryName + "', parameters )") ;
		return buildList(10) ;
	}

	public TeamStatEntity save(TeamStatEntity entity) {
		log("insert ( TeamStatEntity : " + entity + ")" ) ;
		return entity;
	}

	public List<TeamStatEntity> search(Map<String, Object> criteria) {
		log("search (criteria)" ) ;
		return buildList(15) ;
	}

	@Override
	public long countAll() {
		return 0 ;
	}

}
