/*
 * Created on 5 Jun 2016 ( Time 14:55:24 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.mynfl.persistence.services.fake;

import java.util.List;
import java.util.Map;

import com.kumasi.mynfl.domain.jpa.PlayerEntity;
import com.kumasi.mynfl.persistence.commons.fake.GenericFakeService;
import com.kumasi.mynfl.persistence.services.PlayerPersistence;

/**
 * Fake persistence service implementation ( entity "Player" )
 *
 * @author Telosys Tools Generator
 */
public class PlayerPersistenceFAKE extends GenericFakeService<PlayerEntity> implements PlayerPersistence {

	public PlayerPersistenceFAKE () {
		super(PlayerEntity.class);
	}
	
	protected PlayerEntity buildEntity(int index) {
		PlayerEntity entity = new PlayerEntity();
		// Init fields with mock values
		entity.setId( nextInteger() ) ;
		entity.setFirstName( nextString() ) ;
		entity.setLastName( nextString() ) ;
		entity.setDateOfBirth( nextDate() ) ;
		entity.setCollege( nextString() ) ;
		entity.setDraftPosition( nextString() ) ;
		entity.setYearSelected( nextInteger() ) ;
		entity.setDateSigned( nextDate() ) ;
		return entity ;
	}
	
	
	public boolean delete(PlayerEntity entity) {
		log("delete ( PlayerEntity : " + entity + ")" ) ;
		return true;
	}

	public boolean delete( Integer id ) {
		log("delete ( PK )") ;
		return true;
	}

	public void insert(PlayerEntity entity) {
		log("insert ( PlayerEntity : " + entity + ")" ) ;
	}

	public PlayerEntity load( Integer id ) {
		log("load ( PK )") ;
		return buildEntity(1) ; 
	}

	public List<PlayerEntity> loadAll() {
		log("loadAll()") ;
		return buildList(40) ;
	}

	public List<PlayerEntity> loadByNamedQuery(String queryName) {
		log("loadByNamedQuery ( '" + queryName + "' )") ;
		return buildList(20) ;
	}

	public List<PlayerEntity> loadByNamedQuery(String queryName, Map<String, Object> queryParameters) {
		log("loadByNamedQuery ( '" + queryName + "', parameters )") ;
		return buildList(10) ;
	}

	public PlayerEntity save(PlayerEntity entity) {
		log("insert ( PlayerEntity : " + entity + ")" ) ;
		return entity;
	}

	public List<PlayerEntity> search(Map<String, Object> criteria) {
		log("search (criteria)" ) ;
		return buildList(15) ;
	}

	@Override
	public long countAll() {
		return 0 ;
	}

}
