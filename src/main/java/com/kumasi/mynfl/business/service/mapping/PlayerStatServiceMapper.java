/*
 * Created on 5 Jun 2016 ( Time 14:55:36 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.mynfl.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.kumasi.mynfl.domain.PlayerStat;
import com.kumasi.mynfl.domain.jpa.PlayerStatEntity;
import com.kumasi.mynfl.domain.jpa.PlayerEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class PlayerStatServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public PlayerStatServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'PlayerStatEntity' to 'PlayerStat'
	 * @param playerStatEntity
	 */
	public PlayerStat mapPlayerStatEntityToPlayerStat(PlayerStatEntity playerStatEntity) {
		if(playerStatEntity == null) {
			return null;
		}

		//--- Generic mapping 
		PlayerStat playerStat = map(playerStatEntity, PlayerStat.class);

		//--- Link mapping ( link to Player )
		if(playerStatEntity.getPlayer() != null) {
			playerStat.setPlayerId(playerStatEntity.getPlayer().getId());
		}
		return playerStat;
	}
	
	/**
	 * Mapping from 'PlayerStat' to 'PlayerStatEntity'
	 * @param playerStat
	 * @param playerStatEntity
	 */
	public void mapPlayerStatToPlayerStatEntity(PlayerStat playerStat, PlayerStatEntity playerStatEntity) {
		if(playerStat == null) {
			return;
		}

		//--- Generic mapping 
		map(playerStat, playerStatEntity);

		//--- Link mapping ( link : playerStat )
		if( hasLinkToPlayer(playerStat) ) {
			PlayerEntity player1 = new PlayerEntity();
			player1.setId( playerStat.getPlayerId() );
			playerStatEntity.setPlayer( player1 );
		} else {
			playerStatEntity.setPlayer( null );
		}

	}
	
	/**
	 * Verify that Player id is valid.
	 * @param Player Player
	 * @return boolean
	 */
	private boolean hasLinkToPlayer(PlayerStat playerStat) {
		if(playerStat.getPlayerId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}