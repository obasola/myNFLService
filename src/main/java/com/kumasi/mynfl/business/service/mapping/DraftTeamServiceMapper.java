/*
 * Created on 5 Jun 2016 ( Time 14:55:36 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.mynfl.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.kumasi.mynfl.domain.DraftTeam;
import com.kumasi.mynfl.domain.jpa.DraftTeamEntity;
import com.kumasi.mynfl.domain.jpa.DraftEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class DraftTeamServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public DraftTeamServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'DraftTeamEntity' to 'DraftTeam'
	 * @param draftTeamEntity
	 */
	public DraftTeam mapDraftTeamEntityToDraftTeam(DraftTeamEntity draftTeamEntity) {
		if(draftTeamEntity == null) {
			return null;
		}

		//--- Generic mapping 
		DraftTeam draftTeam = map(draftTeamEntity, DraftTeam.class);

		//--- Link mapping ( link to Draft )
		if(draftTeamEntity.getDraft() != null) {
			draftTeam.setDraftId(draftTeamEntity.getDraft().getId());
		}
		return draftTeam;
	}
	
	/**
	 * Mapping from 'DraftTeam' to 'DraftTeamEntity'
	 * @param draftTeam
	 * @param draftTeamEntity
	 */
	public void mapDraftTeamToDraftTeamEntity(DraftTeam draftTeam, DraftTeamEntity draftTeamEntity) {
		if(draftTeam == null) {
			return;
		}

		//--- Generic mapping 
		map(draftTeam, draftTeamEntity);

		//--- Link mapping ( link : draftTeam )
		if( hasLinkToDraft(draftTeam) ) {
			DraftEntity draft1 = new DraftEntity();
			draft1.setId( draftTeam.getDraftId() );
			draftTeamEntity.setDraft( draft1 );
		} else {
			draftTeamEntity.setDraft( null );
		}

	}
	
	/**
	 * Verify that Draft id is valid.
	 * @param Draft Draft
	 * @return boolean
	 */
	private boolean hasLinkToDraft(DraftTeam draftTeam) {
		if(draftTeam.getDraftId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}