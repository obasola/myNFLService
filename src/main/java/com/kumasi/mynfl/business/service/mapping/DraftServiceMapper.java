/*
 * Created on 5 Jun 2016 ( Time 14:55:36 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.mynfl.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.kumasi.mynfl.domain.Draft;
import com.kumasi.mynfl.domain.jpa.DraftEntity;
import com.kumasi.mynfl.domain.jpa.DraftTypeEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class DraftServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public DraftServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'DraftEntity' to 'Draft'
	 * @param draftEntity
	 */
	public Draft mapDraftEntityToDraft(DraftEntity draftEntity) {
		if(draftEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Draft draft = map(draftEntity, Draft.class);

		//--- Link mapping ( link to DraftType )
		if(draftEntity.getDraftType() != null) {
			draft.setDraftTypeId(draftEntity.getDraftType().getId());
		}
		return draft;
	}
	
	/**
	 * Mapping from 'Draft' to 'DraftEntity'
	 * @param draft
	 * @param draftEntity
	 */
	public void mapDraftToDraftEntity(Draft draft, DraftEntity draftEntity) {
		if(draft == null) {
			return;
		}

		//--- Generic mapping 
		map(draft, draftEntity);

		//--- Link mapping ( link : draft )
		if( hasLinkToDraftType(draft) ) {
			DraftTypeEntity draftType1 = new DraftTypeEntity();
			draftType1.setId( draft.getDraftTypeId() );
			draftEntity.setDraftType( draftType1 );
		} else {
			draftEntity.setDraftType( null );
		}

	}
	
	/**
	 * Verify that DraftType id is valid.
	 * @param DraftType DraftType
	 * @return boolean
	 */
	private boolean hasLinkToDraftType(Draft draft) {
		if(draft.getDraftTypeId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}