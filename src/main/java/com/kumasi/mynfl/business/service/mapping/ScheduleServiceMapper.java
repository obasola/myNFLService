/*
 * Created on 5 Jun 2016 ( Time 14:55:37 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.mynfl.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.kumasi.mynfl.domain.Schedule;
import com.kumasi.mynfl.domain.jpa.ScheduleEntity;
import com.kumasi.mynfl.domain.jpa.TeamEntity;
import com.kumasi.mynfl.domain.jpa.ScheduleTypeEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class ScheduleServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public ScheduleServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'ScheduleEntity' to 'Schedule'
	 * @param scheduleEntity
	 */
	public Schedule mapScheduleEntityToSchedule(ScheduleEntity scheduleEntity) {
		if(scheduleEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Schedule schedule = map(scheduleEntity, Schedule.class);

		//--- Link mapping ( link to Team )
		if(scheduleEntity.getTeam() != null) {
			schedule.setTeamId(scheduleEntity.getTeam().getId());
		}
		//--- Link mapping ( link to ScheduleType )
		if(scheduleEntity.getScheduleType() != null) {
			schedule.setScheduleTypeId(scheduleEntity.getScheduleType().getId());
		}
		return schedule;
	}
	
	/**
	 * Mapping from 'Schedule' to 'ScheduleEntity'
	 * @param schedule
	 * @param scheduleEntity
	 */
	public void mapScheduleToScheduleEntity(Schedule schedule, ScheduleEntity scheduleEntity) {
		if(schedule == null) {
			return;
		}

		//--- Generic mapping 
		map(schedule, scheduleEntity);

		//--- Link mapping ( link : schedule )
		if( hasLinkToTeam(schedule) ) {
			TeamEntity team1 = new TeamEntity();
			team1.setId( schedule.getTeamId() );
			scheduleEntity.setTeam( team1 );
		} else {
			scheduleEntity.setTeam( null );
		}

		//--- Link mapping ( link : schedule )
		if( hasLinkToScheduleType(schedule) ) {
			ScheduleTypeEntity scheduleType2 = new ScheduleTypeEntity();
			scheduleType2.setId( schedule.getScheduleTypeId() );
			scheduleEntity.setScheduleType( scheduleType2 );
		} else {
			scheduleEntity.setScheduleType( null );
		}

	}
	
	/**
	 * Verify that Team id is valid.
	 * @param Team Team
	 * @return boolean
	 */
	private boolean hasLinkToTeam(Schedule schedule) {
		if(schedule.getTeamId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that ScheduleType id is valid.
	 * @param ScheduleType ScheduleType
	 * @return boolean
	 */
	private boolean hasLinkToScheduleType(Schedule schedule) {
		if(schedule.getScheduleTypeId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}