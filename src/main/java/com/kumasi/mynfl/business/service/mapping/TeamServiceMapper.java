/*
 * Created on 5 Jun 2016 ( Time 14:55:37 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.mynfl.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.kumasi.mynfl.domain.Team;
import com.kumasi.mynfl.domain.jpa.TeamEntity;
import com.kumasi.mynfl.domain.jpa.DivisionEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class TeamServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public TeamServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'TeamEntity' to 'Team'
	 * @param teamEntity
	 */
	public Team mapTeamEntityToTeam(TeamEntity teamEntity) {
		if(teamEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Team team = map(teamEntity, Team.class);

		//--- Link mapping ( link to Division )
		if(teamEntity.getDivision() != null) {
			team.setDivisionId(teamEntity.getDivision().getId());
		}
		return team;
	}
	
	/**
	 * Mapping from 'Team' to 'TeamEntity'
	 * @param team
	 * @param teamEntity
	 */
	public void mapTeamToTeamEntity(Team team, TeamEntity teamEntity) {
		if(team == null) {
			return;
		}

		//--- Generic mapping 
		map(team, teamEntity);

		//--- Link mapping ( link : team )
		if( hasLinkToDivision(team) ) {
			DivisionEntity division1 = new DivisionEntity();
			division1.setId( team.getDivisionId() );
			teamEntity.setDivision( division1 );
		} else {
			teamEntity.setDivision( null );
		}

	}
	
	/**
	 * Verify that Division id is valid.
	 * @param Division Division
	 * @return boolean
	 */
	private boolean hasLinkToDivision(Team team) {
		if(team.getDivisionId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}