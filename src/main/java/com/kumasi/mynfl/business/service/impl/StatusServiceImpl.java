/*
 * Created on 5 Jun 2016 ( Time 14:55:37 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.mynfl.business.service.impl;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import com.kumasi.mynfl.domain.Status;
import com.kumasi.mynfl.domain.jpa.StatusEntity;
import java.util.List;
import com.kumasi.mynfl.business.service.StatusService;
import com.kumasi.mynfl.business.service.mapping.StatusServiceMapper;
import com.kumasi.mynfl.persistence.PersistenceServiceProvider;
import com.kumasi.mynfl.persistence.services.StatusPersistence;
import org.springframework.stereotype.Component;

/**
 * Implementation of StatusService
 */
@Component
public class StatusServiceImpl implements StatusService {

	private StatusPersistence statusPersistence;

	@Resource
	private StatusServiceMapper statusServiceMapper;
	
	public StatusServiceImpl() {
		statusPersistence = PersistenceServiceProvider.getService(StatusPersistence.class);
	}
		
	@Override
	public Status findById(Integer id) {
		StatusEntity entity = statusPersistence.load(id);
		return statusServiceMapper.mapStatusEntityToStatus(entity);
	}

	@Override
	public List<Status> findAll() {
		List<StatusEntity> entities = statusPersistence.loadAll();
		List<Status> beans = new ArrayList<Status>();
		for(StatusEntity entity : entities) {
			beans.add(statusServiceMapper.mapStatusEntityToStatus(entity));
		}
		return beans;
	}

	@Override
	public Status save(Status status) {
		return update(status) ;
	}

	@Override
	public Status create(Status status) {
		if(statusPersistence.load(status.getId()) != null) {
			throw new IllegalStateException("already.exists");
		}
		StatusEntity statusEntity = new StatusEntity();
		statusServiceMapper.mapStatusToStatusEntity(status, statusEntity);
		StatusEntity statusEntitySaved = statusPersistence.save(statusEntity);
		return statusServiceMapper.mapStatusEntityToStatus(statusEntitySaved);
	}

	@Override
	public Status update(Status status) {
		StatusEntity statusEntity = statusPersistence.load(status.getId());
		statusServiceMapper.mapStatusToStatusEntity(status, statusEntity);
		StatusEntity statusEntitySaved = statusPersistence.save(statusEntity);
		return statusServiceMapper.mapStatusEntityToStatus(statusEntitySaved);
	}

	@Override
	public void delete(Integer id) {
		statusPersistence.delete(id);
	}

	public StatusPersistence getStatusPersistence() {
		return statusPersistence;
	}

	public void setStatusPersistence(StatusPersistence statusPersistence) {
		this.statusPersistence = statusPersistence;
	}

	public StatusServiceMapper getStatusServiceMapper() {
		return statusServiceMapper;
	}

	public void setStatusServiceMapper(StatusServiceMapper statusServiceMapper) {
		this.statusServiceMapper = statusServiceMapper;
	}

}
