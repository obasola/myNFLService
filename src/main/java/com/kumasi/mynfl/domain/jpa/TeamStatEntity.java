/*
 * Created on 5 Jun 2016 ( Time 14:55:25 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.kumasi.mynfl.domain.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;


import javax.persistence.*;

/**
 * Persistent class for entity stored in table "Team_Stat"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="Team_Stat", catalog="nfldb" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="TeamStatEntity.countAll", query="SELECT COUNT(x) FROM TeamStatEntity x" )
} )
public class TeamStatEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="won")
    private Integer    won          ;

    @Column(name="lost")
    private Integer    lost         ;

    @Column(name="tied")
    private Integer    tied         ;

    @Column(name="percent")
    private Float      percent      ;

    @Column(name="points_forced")
    private Integer    pointsForced ;

    @Column(name="points_allowed")
    private Integer    pointsAllowed ;

    @Column(name="net_pints")
    private Integer    netPints     ;

    @Column(name="touchdowns")
    private Integer    touchdowns   ;

    @Column(name="home_record", length=5)
    private String     homeRecord   ;

    @Column(name="road_record", length=5)
    private String     roadRecord   ;

    @Column(name="division_record", length=5)
    private String     divisionRecord ;

    @Column(name="conference_record", length=5)
    private String     conferenceRecord ;

    @Column(name="Player_Statscol", length=45)
    private String     playerStatscol ;

    @Column(name="overall_percent")
    private Float      overallPercent ;

    @Column(name="streak", length=45)
    private String     streak       ;

    @Column(name="last_five", length=5)
    private String     lastFive     ;

	// "teamId" (column "Team_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="Team_id", referencedColumnName="id")
    private TeamEntity team        ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public TeamStatEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : won ( INT ) 
    public void setWon( Integer won ) {
        this.won = won;
    }
    public Integer getWon() {
        return this.won;
    }

    //--- DATABASE MAPPING : lost ( INT ) 
    public void setLost( Integer lost ) {
        this.lost = lost;
    }
    public Integer getLost() {
        return this.lost;
    }

    //--- DATABASE MAPPING : tied ( INT ) 
    public void setTied( Integer tied ) {
        this.tied = tied;
    }
    public Integer getTied() {
        return this.tied;
    }

    //--- DATABASE MAPPING : percent ( FLOAT ) 
    public void setPercent( Float percent ) {
        this.percent = percent;
    }
    public Float getPercent() {
        return this.percent;
    }

    //--- DATABASE MAPPING : points_forced ( INT ) 
    public void setPointsForced( Integer pointsForced ) {
        this.pointsForced = pointsForced;
    }
    public Integer getPointsForced() {
        return this.pointsForced;
    }

    //--- DATABASE MAPPING : points_allowed ( INT ) 
    public void setPointsAllowed( Integer pointsAllowed ) {
        this.pointsAllowed = pointsAllowed;
    }
    public Integer getPointsAllowed() {
        return this.pointsAllowed;
    }

    //--- DATABASE MAPPING : net_pints ( INT ) 
    public void setNetPints( Integer netPints ) {
        this.netPints = netPints;
    }
    public Integer getNetPints() {
        return this.netPints;
    }

    //--- DATABASE MAPPING : touchdowns ( INT ) 
    public void setTouchdowns( Integer touchdowns ) {
        this.touchdowns = touchdowns;
    }
    public Integer getTouchdowns() {
        return this.touchdowns;
    }

    //--- DATABASE MAPPING : home_record ( VARCHAR ) 
    public void setHomeRecord( String homeRecord ) {
        this.homeRecord = homeRecord;
    }
    public String getHomeRecord() {
        return this.homeRecord;
    }

    //--- DATABASE MAPPING : road_record ( VARCHAR ) 
    public void setRoadRecord( String roadRecord ) {
        this.roadRecord = roadRecord;
    }
    public String getRoadRecord() {
        return this.roadRecord;
    }

    //--- DATABASE MAPPING : division_record ( VARCHAR ) 
    public void setDivisionRecord( String divisionRecord ) {
        this.divisionRecord = divisionRecord;
    }
    public String getDivisionRecord() {
        return this.divisionRecord;
    }

    //--- DATABASE MAPPING : conference_record ( VARCHAR ) 
    public void setConferenceRecord( String conferenceRecord ) {
        this.conferenceRecord = conferenceRecord;
    }
    public String getConferenceRecord() {
        return this.conferenceRecord;
    }

    //--- DATABASE MAPPING : Player_Statscol ( VARCHAR ) 
    public void setPlayerStatscol( String playerStatscol ) {
        this.playerStatscol = playerStatscol;
    }
    public String getPlayerStatscol() {
        return this.playerStatscol;
    }

    //--- DATABASE MAPPING : overall_percent ( FLOAT ) 
    public void setOverallPercent( Float overallPercent ) {
        this.overallPercent = overallPercent;
    }
    public Float getOverallPercent() {
        return this.overallPercent;
    }

    //--- DATABASE MAPPING : streak ( VARCHAR ) 
    public void setStreak( String streak ) {
        this.streak = streak;
    }
    public String getStreak() {
        return this.streak;
    }

    //--- DATABASE MAPPING : last_five ( VARCHAR ) 
    public void setLastFive( String lastFive ) {
        this.lastFive = lastFive;
    }
    public String getLastFive() {
        return this.lastFive;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setTeam( TeamEntity team ) {
        this.team = team;
    }
    public TeamEntity getTeam() {
        return this.team;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        return this.id.toString();
    } 

}
