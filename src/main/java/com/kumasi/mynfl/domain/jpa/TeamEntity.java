/*
 * Created on 5 Jun 2016 ( Time 14:55:25 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.kumasi.mynfl.domain.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "Team"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="Team", catalog="nfldb" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="TeamEntity.countAll", query="SELECT COUNT(x) FROM TeamEntity x" )
} )
public class TeamEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="code", length=3)
    private String     code         ;

    @Column(name="name", length=45)
    private String     name         ;

    @Column(name="city", length=45)
    private String     city         ;

    @Column(name="state", length=45)
    private String     state        ;

    @Column(name="stadium", length=45)
    private String     stadium      ;

    @Column(name="owner", length=45)
    private String     owner        ;

    @Column(name="head_coach", length=45)
    private String     headCoach    ;

	// "divisionId" (column "Division_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="Division_id", referencedColumnName="id")
    private DivisionEntity division    ;

    @OneToMany(mappedBy="team", targetEntity=ScheduleEntity.class)
    private List<ScheduleEntity> listOfSchedule;

    @OneToMany(mappedBy="team", targetEntity=PlayerEntity.class)
    private List<PlayerEntity> listOfPlayer;

    @OneToMany(mappedBy="team", targetEntity=TeamStatEntity.class)
    private List<TeamStatEntity> listOfTeamStat;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public TeamEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : code ( VARCHAR ) 
    public void setCode( String code ) {
        this.code = code;
    }
    public String getCode() {
        return this.code;
    }

    //--- DATABASE MAPPING : name ( VARCHAR ) 
    public void setName( String name ) {
        this.name = name;
    }
    public String getName() {
        return this.name;
    }

    //--- DATABASE MAPPING : city ( VARCHAR ) 
    public void setCity( String city ) {
        this.city = city;
    }
    public String getCity() {
        return this.city;
    }

    //--- DATABASE MAPPING : state ( VARCHAR ) 
    public void setState( String state ) {
        this.state = state;
    }
    public String getState() {
        return this.state;
    }

    //--- DATABASE MAPPING : stadium ( VARCHAR ) 
    public void setStadium( String stadium ) {
        this.stadium = stadium;
    }
    public String getStadium() {
        return this.stadium;
    }

    //--- DATABASE MAPPING : owner ( VARCHAR ) 
    public void setOwner( String owner ) {
        this.owner = owner;
    }
    public String getOwner() {
        return this.owner;
    }

    //--- DATABASE MAPPING : head_coach ( VARCHAR ) 
    public void setHeadCoach( String headCoach ) {
        this.headCoach = headCoach;
    }
    public String getHeadCoach() {
        return this.headCoach;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setDivision( DivisionEntity division ) {
        this.division = division;
    }
    public DivisionEntity getDivision() {
        return this.division;
    }

    public void setListOfSchedule( List<ScheduleEntity> listOfSchedule ) {
        this.listOfSchedule = listOfSchedule;
    }
    public List<ScheduleEntity> getListOfSchedule() {
        return this.listOfSchedule;
    }

    public void setListOfPlayer( List<PlayerEntity> listOfPlayer ) {
        this.listOfPlayer = listOfPlayer;
    }
    public List<PlayerEntity> getListOfPlayer() {
        return this.listOfPlayer;
    }

    public void setListOfTeamStat( List<TeamStatEntity> listOfTeamStat ) {
        this.listOfTeamStat = listOfTeamStat;
    }
    public List<TeamStatEntity> getListOfTeamStat() {
        return this.listOfTeamStat;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
    	return this.name;
    } 

}
